
import { useLocation, Link } from "react-router-dom";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";
import { AlertTriangle, Brain, Home, RotateCcw, ExternalLink } from "lucide-react";

interface ResultData {
  mbtiType: string;
  functionScores: Record<string, number>;
  dominantFunction: string;
}

const Result = () => {
  const location = useLocation();
  const results = location.state?.results as ResultData;

  if (!results) {
    return (
      <div className="min-h-screen flex items-center justify-center">
        <Card>
          <CardContent className="p-8 text-center">
            <p className="text-gray-600 mb-4">ูู ูุชู ุงูุนุซูุฑ ุนูู ูุชุงุฆุฌ ุงูุงุฎุชุจุงุฑ</p>
            <Link to="/">
              <Button>ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ</Button>
            </Link>
          </CardContent>
        </Card>
      </div>
    );
  }

  const functionDescriptions = {
    Ne: { name: "Ne - Extraverted Intuition", description: "ุงุณุชูุดุงู ุงูุฅููุงููุงุช ูุงูุฃููุงุฑ ุงูุฌุฏูุฏุฉ" },
    Ni: { name: "Ni - Introverted Intuition", description: "ููู ุงูุฃููุงุท ูุงูุฑุคู ุงูุนูููุฉ" },
    Se: { name: "Se - Extraverted Sensing", description: "ุงููุนู ุจุงููุญุธุฉ ุงูุญุงููุฉ ูุงูุชูุงุตูู" },
    Si: { name: "Si - Introverted Sensing", description: "ุงูุงุนุชูุงุฏ ุนูู ุงูุชุฌุงุฑุจ ูุงูุฐูุฑูุงุช" },
    Te: { name: "Te - Extraverted Thinking", description: "ุงูุชูุธูู ูุชุญููู ุงูุฃูุฏุงู ุจููุงุกุฉ" },
    Ti: { name: "Ti - Introverted Thinking", description: "ุงูุชุญููู ุงูููุทูู ูุงูููู ุงูุนููู" },
    Fe: { name: "Fe - Extraverted Feeling", description: "ุงูุงูุชูุงู ุจูุดุงุนุฑ ูุงุญุชูุงุฌุงุช ุงูุขุฎุฑูู" },
    Fi: { name: "Fi - Introverted Feeling", description: "ุงูุตุฏู ูุน ุงูููู ุงูุดุฎุตูุฉ" }
  };

  const mbtiDescriptions = {
    INTJ: "ุงููููุฏุณ - ุงุณุชุฑุงุชูุฌู ููุณุชูู",
    INTP: "ุงููููุฑ - ููุทูู ููุจุฏุน",
    ENTJ: "ุงููุงุฆุฏ - ุญุงุฒู ูุทููุญ",
    ENTP: "ุงููุจุชูุฑ - ูุจุฏุน ููุชุญูุณ",
    INFJ: "ุงููุญุงูู - ูุซุงูู ูููุธู",
    INFP: "ุงููุณูุท - ูุจุฏุน ููุชุนุงุทู",
    ENFJ: "ุงููุนูู - ูููู ููุชุนุงุทู",
    ENFP: "ุงููุญูุฒ - ูุชุญูุณ ููุจุฏุน",
    ISTJ: "ุงูููุทูู - ุนููู ูููุซูู",
    ISFJ: "ุงููุญุงูู - ูุชุนุงุทู ููุณุคูู",
    ESTJ: "ุงููุฏูุฑ - ููุธู ูุญุงุฒู",
    ESFJ: "ุงูููุตู - ูุชุนุงุทู ูุงุฌุชูุงุนู",
    ISTP: "ุงููุตูุญ - ุนููู ููุฑู",
    ISFP: "ุงููุบุงูุฑ - ุญุณุงุณ ููุฑู",
    ESTP: "ุงูููุงูุฑ - ุนููู ูุญููู",
    ESFP: "ุงููุคุฏู - ูุชุญูุณ ูุงุฌุชูุงุนู"
  };

  const totalScore = Object.values(results.functionScores).reduce((sum, score) => sum + score, 0);

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 py-8 px-4">
      <div className="max-w-6xl mx-auto">
        {/* Header */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-gray-800 mb-4 flex items-center justify-center gap-3">
            <Brain className="w-10 h-10 text-purple-600" />
            ูุชุงุฆุฌ ุงุฎุชุจุงุฑ ุงููุธุงุฆู ุงูุฅุฏุฑุงููุฉ
          </h1>
        </div>

        {/* MBTI Type Result */}
        <Card className="mb-8 border-2 border-purple-200">
          <CardHeader className="text-center">
            <CardTitle className="text-3xl text-purple-800">
              ููุท ุดุฎุตูุชู: {results.mbtiType}
            </CardTitle>
            <p className="text-lg text-gray-700">
              {mbtiDescriptions[results.mbtiType as keyof typeof mbtiDescriptions]}
            </p>
          </CardHeader>
        </Card>

        {/* Dominant Function */}
        <Card className="mb-8 border-2 border-green-200 bg-green-50">
          <CardHeader>
            <CardTitle className="text-xl text-green-800">
              ุงููุธููุฉ ุงูุฅุฏุฑุงููุฉ ุงููููููุฉ
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="text-center">
              <h3 className="text-2xl font-bold text-green-700 mb-2">
                {functionDescriptions[results.dominantFunction as keyof typeof functionDescriptions]?.name}
              </h3>
              <p className="text-gray-700">
                {functionDescriptions[results.dominantFunction as keyof typeof functionDescriptions]?.description}
              </p>
            </div>
          </CardContent>
        </Card>

        {/* Function Scores */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="text-xl text-gray-800">
              ูุณุจ ุงููุธุงุฆู ุงูุฅุฏุฑุงููุฉ
            </CardTitle>
            <p className="text-gray-600">
              ุชูุฒูุน ููุฉ ุงููุธุงุฆู ุงูุฅุฏุฑุงููุฉ ูุฏูู ุจูุงุกู ุนูู ุฅุฌุงุจุงุชู
            </p>
          </CardHeader>
          <CardContent>
            <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
              {Object.entries(results.functionScores)
                .sort(([,a], [,b]) => b - a)
                .map(([func, score]) => {
                  const percentage = totalScore > 0 ? (score / totalScore) * 100 : 0;
                  return (
                    <div key={func} className="space-y-2">
                      <div className="flex justify-between items-center">
                        <span className="font-medium text-gray-800">
                          {functionDescriptions[func as keyof typeof functionDescriptions]?.name}
                        </span>
                        <span className="text-sm text-gray-600">
                          {percentage.toFixed(1)}%
                        </span>
                      </div>
                      <Progress value={percentage} className="h-3" />
                      <p className="text-xs text-gray-600">
                        {functionDescriptions[func as keyof typeof functionDescriptions]?.description}
                      </p>
                    </div>
                  );
                })}
            </div>
          </CardContent>
        </Card>

        {/* TikTok Section */}
        <Card className="mb-8 border-2 border-pink-200 bg-pink-50">
          <CardHeader>
            <CardTitle className="text-xl text-pink-800 flex items-center gap-2">
              ๐ฑ ุชุงุจุนูุง ุนูู ุชูู ุชูู
            </CardTitle>
          </CardHeader>
          <CardContent className="text-center">
            <p className="text-gray-700 mb-4">
              ููุฒูุฏ ูู ุงููุญุชูู ุญูู ุงูุดุฎุตูุงุช ูุงููุธุงุฆู ุงูุฅุฏุฑุงููุฉ
            </p>
            <a
              href="https://www.tiktok.com/@reatwiy?_t=ZS-8xfyr92oGP9&_r=1"
              target="_blank"
              rel="noopener noreferrer"
              className="inline-flex items-center gap-2 bg-pink-600 hover:bg-pink-700 text-white px-6 py-3 rounded-lg transition-colors"
            >
              <ExternalLink className="w-4 h-4" />
              @reatwiy ุนูู ุชูู ุชูู
            </a>
          </CardContent>
        </Card>

        {/* Disclaimer */}
        <Card className="mb-8 border-2 border-amber-200 bg-amber-50">
          <CardHeader>
            <CardTitle className="text-lg text-amber-800 flex items-center gap-2">
              <AlertTriangle className="w-5 h-5" />
              ุชูุจูู ููู ุญูู ุฏูุฉ ุงููุชุงุฆุฌ
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4 text-gray-700">
            <p>
              <strong>ูุฐุง ุงูุงุฎุชุจุงุฑ ุฃุฏุงุฉ ุงุณุชูุดุงููุฉ:</strong> ุงููุชุงุฆุฌ ููุณุช ููุงุฆูุฉ ุฃู ุฏูููุฉ ุจูุณุจุฉ 100%. 
              ุงุนุชุจุฑูุง ููุทุฉ ุงูุทูุงู ูููู ุดุฎุตูุชู ุจุดูู ุฃูุถู.
            </p>
            <p>
              <strong>ุงูุชุทููุฑ ุงููุณุชูุฑ:</strong> ุดุฎุตูุชู ูุฏ ุชุชุทูุฑ ูุชุชุบูุฑ ูุน ุงูููุช ูุงูุชุฌุงุฑุจ ุงูุฌุฏูุฏุฉ.
            </p>
            <p>
              <strong>ุงูุงุณุชุดุงุฑุฉ ุงูููููุฉ:</strong> ููุญุตูู ุนูู ุชูููู ุฏูููุ ููุตุญ ุจุงูุชุดุงูุฑ ูุน ูุชุฎุตุต ูู ุนูู ุงูููุณ.
            </p>
          </CardContent>
        </Card>

        {/* Sources */}
        <Card className="mb-8">
          <CardHeader>
            <CardTitle className="text-lg text-gray-800">
              ูุตุงุฏุฑ ุงูุฃุณุฆูุฉ ูุงููุนูููุงุช
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-2 text-gray-700">
            <p>โข ูุธุฑูุฉ ูุงุฑู ูููุบ ูููุธุงุฆู ุงูุฅุฏุฑุงููุฉ (Carl Jung's Cognitive Functions)</p>
            <p>โข ูุคุดุฑ ูุงูุฑุฒ-ุจุฑูุบุฒ ููุฃููุงุท (Myers-Briggs Type Indicator - MBTI)</p>
            <p>โข ุฃุจุญุงุซ ุนูู ุงูููุณ ุงููุนุฑูู ุงูุญุฏูุซ (Modern Cognitive Psychology Research)</p>
            <p>โข ุฏุฑุงุณุงุช ุงูุดุฎุตูุฉ ูู ุนูู ุงูููุณ ุงูุฅููููููู (Clinical Psychology Studies)</p>
            <p>โข ูุตุงุฏุฑ ููุซูุฉ ูู ูุฌุชูุน MBTI ุงูุนุงููู</p>
          </CardContent>
        </Card>

        {/* Action Buttons */}
        <div className="flex flex-col sm:flex-row gap-4 justify-center">
          <Link to="/">
            <Button variant="outline" className="flex items-center gap-2">
              <Home className="w-4 h-4" />
              ุงูุนูุฏุฉ ููุฑุฆูุณูุฉ
            </Button>
          </Link>
          <Link to="/test">
            <Button className="flex items-center gap-2 bg-purple-600 hover:bg-purple-700">
              <RotateCcw className="w-4 h-4" />
              ุฅุนุงุฏุฉ ุงูุงุฎุชุจุงุฑ
            </Button>
          </Link>
        </div>
      </div>
    </div>
  );
};

export default Result;
